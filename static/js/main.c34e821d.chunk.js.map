{"version":3,"sources":["components/App/App.js","index.js"],"names":["API_ENDPOINT","Page","styled","div","Title","h1","MessageForm","form","MessageTextarea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","err","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onChange","target","onFocus","toString","length","map","Date","createdAt","toLocaleString","id","ReactDOM","render","document","getElementById"],"mappings":"+LAIMA,EACJ,0EAEIC,EAAOC,IAAOC,IAAV,gEAKJC,EAAQF,IAAOG,GAAV,4CAGLC,EAAcJ,IAAOK,KAAV,iDAIXC,EAAkBN,IAAOO,SAAV,iFAMfC,EAAeR,IAAOS,OAAV,gDAGZC,EAAcV,IAAOC,IAAV,gDAGXU,EAAmBX,IAAOC,IAAV,6IAShBW,EAAcZ,IAAOC,IAAV,yGAKXY,EAAgBb,IAAOC,IAAV,gEAIba,EAAcd,IAAOC,IAAV,0BACXc,EAAcf,IAAOC,IAAV,qEAKXe,EAAehB,IAAOC,IAAV,gEAIZgB,EAAUjB,IAAOC,IAAV,+OAab,SAASiB,EAAT,GAA8C,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC/B,OACE,eAACV,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBM,IAChB,cAACL,EAAD,UAAcM,OAEhB,cAACL,EAAD,UAAcM,OAsGLC,MA5Ff,WACE,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8CF,mBAAS,MAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgDN,mBAAS,MAAzD,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KAEMC,EAAgB,WACpB,OAAOC,MAAMrC,GACVsC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLd,EAAYc,MAEbC,OAAM,SAACC,GACNd,EAAmBc,EAAIC,aA6C7B,OAHAC,qBAAU,WACRT,MACC,IAED,eAACnC,EAAD,WACGiC,GAAwB,cAACf,EAAD,yBACzB,cAACf,EAAD,iCACA,eAACE,EAAD,CAAawC,SArCQ,SAACC,GACxBA,EAAEC,iBACEd,IACJC,GAAwB,GACxBE,MAAMrC,EAAc,CAClBiD,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,MACVH,KAAMrB,MAGPQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLN,GAAwB,GACR,IAAZM,EAAKc,IAITxB,EAAS,IACTK,KAJEH,EAAoBQ,EAAKG,YAM5BF,OAAM,SAACC,GACNR,GAAwB,GACxBF,EAAoBU,EAAIC,cAW1B,UACE,cAACpC,EAAD,CACEsB,MAAOA,EACP0B,SAhDqB,SAACT,GAC5BhB,EAASgB,EAAEU,OAAO3B,QAgDZ4B,QA7CoB,WAC1BzB,EAAoB,SA8ChB,cAACvB,EAAD,qBACCsB,GAAoB,cAACd,EAAD,UAAec,OAErCJ,GACC,cAACV,EAAD,UAAeU,EAAgB+B,aAEhCjC,GAAgC,IAApBA,EAASkC,QAAgB,6CACtC,cAAChD,EAAD,UACGc,GACCA,EAASmC,KAAI,SAACjB,GAAD,OACX,cAACxB,EAAD,CAEEC,OAAQuB,EAAQU,SAChBhC,KAAM,IAAIwC,KAAKlB,EAAQmB,WAAWC,iBAHpC,SAKGpB,EAAQO,MAJJP,EAAQqB,aCrK3BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c34e821d.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\n\nconst Page = styled.div`\n  width: 500px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n`;\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\n\nconst MessageTextarea = styled.textarea`\n  display: block;\n  width: 100%;\n  height: 150px;\n`;\n\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\nconst MessageList = styled.div`\n  margin-top: 8px;\n`;\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 8px 16px;\n\n  & + & {\n    margin-top: 8px;\n  }\n`;\nconst MessageHead = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst MessageAuthor = styled.div`\n  color: blue;\n  font-size: 16px;\n`;\nconst MessageTime = styled.div``;\nconst MessageBody = styled.div`\n  font-size: 16px;\n  margin-top: 16px;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content center;\n`;\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  childrem: PropTypes.node,\n};\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [messageApiError, setMessageApiError] = useState(null);\n  const [value, setValue] = useState();\n  const [postMessageError, setPostMessageError] = useState(null);\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\n\n  const fetchMessages = () => {\n    return fetch(API_ENDPOINT)\n      .then((res) => res.json())\n      .then((data) => {\n        setMessages(data);\n      })\n      .catch((err) => {\n        setMessageApiError(err.message);\n      });\n  };\n\n  const handleTextareaChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleTextareaFocus = () => {\n    setPostMessageError(null);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (isLoadingPostMessage) return;\n    setIsLoadingPostMessage(true);\n    fetch(API_ENDPOINT, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"123\",\n        body: value,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setIsLoadingPostMessage(false);\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n          return;\n        }\n        setValue(\"\");\n        fetchMessages();\n      })\n      .catch((err) => {\n        setIsLoadingPostMessage(false);\n        setPostMessageError(err.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextarea\n          value={value}\n          onChange={handleTextareaChange}\n          onFocus={handleTextareaFocus}\n        />\n        <SubmitButton>Submit</SubmitButton>\n        {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\n      </MessageForm>\n      {messageApiError && (\n        <ErrorMessage>{messageApiError.toString()}</ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No message</div>}\n      <MessageList>\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}